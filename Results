Your submission was recorded at 2018-09-12 11:08:20 +0000 : submission is on time.
Score: 257/308

App
  should respond to simple request [0 points]

Table header
  should have link to sort by title [10 points]
  should have link to sort by release date [10 points]

Table
  should be sortable by title [20 points]
  should be sortable by release date [20 points]
  should highlight title header when sorted [20 points]
  should highlight release date header when sorted [20 points]

GET /movies
  should be successful
  should have #ratings_form form [5 points] (FAILED - 1)
  should have #ratings_submit button [5 points] (FAILED - 2)
  should have checkboxes [5 points] (FAILED - 3)
  When I first visit the page
    should have all checkboxes checked  [8 points] (FAILED - 4)
    should have movies visible [7 points]
  when selecting a movie rating
    should only display movies of that rating [20 points]
    should automatically check the selected rating in the response [25 points] (FAILED - 5)
  when selecting a sort column
    should preserve the ratings filter [25 points]

GET /movies
  basic tests
    should be successful
    should have a form with id ratings_form (FAILED - 6)
    should have #ratings_submit button (FAILED - 7)
    should have checkboxes (FAILED - 8)
    should have #movies
    should have #title_header
    should have #release_date_header
  when selecting a movie rating
    should remember the rating selected [20 points]
    should allow new ratings to be selected [15 points]
    should redirect to a RESTful route [15 points]
  when selecting a sort field
    should remember the sort order [20 points]
    should allow a new sort order to be selected [15 points]
    should redirect to a RESTful route [15 points]

Failures:

  1) GET /movies should have #ratings_form form [5 points]
     Failure/Error: expect(@page.form_with(:id =>'ratings_form')).not_to be_nil

       expected: not nil
            got: nil

  2) GET /movies should have #ratings_submit button [5 points]
     Failure/Error: expect(@page.form_with(:id => 'ratings_form').button_with(:id => 'ratings_submit')).not_to equal(nil)

     NoMethodError:
       undefined method `button_with' for nil:NilClass

  3) GET /movies should have checkboxes [5 points]
     Failure/Error:
       @page.form_with(:id => 'ratings_form').checkboxes.each do |checkbox|
         expect(checkbox[:id]).to match(/ratings_\w+/)
       end

     NoMethodError:
       undefined method `checkboxes' for nil:NilClass

  4) GET /movies When I first visit the page should have all checkboxes checked  [8 points]
     Failure/Error: checked_boxes=@page.form_with(:id => 'ratings_form').checkboxes_with(:checked=>true)

     NoMethodError:
       undefined method `checkboxes_with' for nil:NilClass

  5) GET /movies when selecting a movie rating should automatically check the selected rating in the response [25 points]
     Failure/Error: expect(checkbox).to be_checked
       expected `[checkbox:0x195ba7c type: checkbox name: ratings[G] value: false].checked?` to return true, got false

  6) GET /movies basic tests should have a form with id ratings_form
     Failure/Error: expect(@page.form_with(:id =>'ratings_form')).not_to be_nil

       expected: not nil
            got: nil

  7) GET /movies basic tests should have #ratings_submit button
     Failure/Error: expect(@page.form_with(:id =>'ratings_form').button_with(:id => 'ratings_submit')).not_to equal(nil)

     NoMethodError:
       undefined method `button_with' for nil:NilClass

  8) GET /movies basic tests should have checkboxes
     Failure/Error:
       @page.form_with(:id => 'ratings_form').checkboxes.each do |checkbox|
         expect(checkbox[:id]).to match(/ratings_\w+/)
       end

     NoMethodError:
       undefined method `checkboxes' for nil:NilClass

Finished in 4.63 seconds (files took 19890 minutes 35 seconds to load)
29 examples, 8 failures

Failed examples:

rspec ./your_code.rb:170 # GET /movies should have #ratings_form form [5 points]
rspec ./your_code.rb:175 # GET /movies should have #ratings_submit button [5 points]
rspec ./your_code.rb:180 # GET /movies should have checkboxes [5 points]
rspec ./your_code.rb:267 # GET /movies When I first visit the page should have all checkboxes checked  [8 points]
rspec ./your_code.rb:310 # GET /movies when selecting a movie rating should automatically check the selected rating in the response [25 points]
rspec ./your_code.rb:397 # GET /movies basic tests should have a form with id ratings_form
rspec ./your_code.rb:401 # GET /movies basic tests should have #ratings_submit button
rspec ./your_code.rb:406 # GET /movies basic tests should have checkboxes